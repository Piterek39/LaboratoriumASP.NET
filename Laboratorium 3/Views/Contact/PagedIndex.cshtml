@model PagingList<Contact>

@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}
<div class="text-center">
    <h1 class="display-4">Welcome</h1>
    <h3>Last visit: @ViewData["Visit"]</h3>
    <p>Learn about <a href="https://docs.microsoft.com/aspnet/core">building Web apps with ASP.NET Core</a>.</p>
</div>


<h1>Lista kontaktow</h1>
<div>
    <table class="table">
        <tr>
            <th>
                Nazwa
            </th>
            <th>
                Email
            </th>
            <th>
                Priorytet
            </th>
            <th>
                Akcje
            </th>
        </tr>
        @foreach (var item in @Model.Data)
        {
            <tr>
                <td>
                    @item.Name
                </td>
                <td>
                    @item.Email
                </td>
                <td>
                    @item.Priority
                </td>
                <td>
                    <a class="btn btn-outline-primary"
                       asp-action="Update"
                       asp-controller="Contact"
                       asp-route-id=@item.Id>Edytuj</a>
                    <a class="btn btn-outline-info"
                       asp-action="Details"
                       asp-controller="Contact"
                       asp-route-id=@item.Id>Szczegóły</a>
                    <a class="btn btn-outline-danger"
                       asp-action="Delete"
                       asp-controller="Contact"
                       asp-route-id=@item.Id>Usuń</a>
                </td>
            </tr>
        }
        <a asp-action="CreateApi">Dodaj książkę (wersja z API)</a>
    </table>
    <nav aria-label="Books page navigation">
        <ul class="pagination">
            @if (Model.IsPrevious)
            {
                <li class="page-item">
                    <a class="page-link"
                       asp-controller="Contact"
                       asp-action="PagedIndex"
                       asp-route-page="@(Model.Number - 1)"
                       asp-route-size="5">
                        Poprzednia
                    </a>
                </li>
            }
            else
            {
                <li class="page-item disabled">
                    <a class="page-link">Poprzednia</a>
                </li>
            }
            <li class="page-item disabled">
                <a class="page-link">@Model.Number</a>
            </li>
            @if (Model.IsNext)
            {
                <li class="page-item">
                    <a class="page-link"
                       asp-controller="Contact"
                       asp-action="PagedIndex"
                       asp-route-page="@(Model.Number + 1)"
                       asp-route-size="5">
                        Następna
                    </a>
                </li>
            }
            else
            {
                <li class="page-item disabled">
                    <a class="page-link">Następna</a>
                </li>
            }
        </ul>
    </nav>
</div>